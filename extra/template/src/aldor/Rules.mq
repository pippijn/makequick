# Programs are installed to $(bindir) by default. "program aldor" is thus the
# same as "program aldor -> bin".
program aldor {
	sources {
		aldor.c
	}

	link {
		toplevel
		port_opsys
		-lm
	}

	# This is a scoped variable declaration. It is not visible outside
	# the scope of program aldor. It is not expanded in rule bodies.
	# Rather, it is exported as make variable and make will expand them.
	# Keep in mind that automatic variables such as $* and $@ do not work
	# here. The translator will reject variables with one or more automatic
	# variables in them.
	# Variables are expanded when used inside rule targets and sources.
	ALDOR_OUTPUTS = c ao ai fm ap asy

	# This is an example of a multi-rule. You may either list all targets,
	# separately, or use a bash-style {a b c} to match several at once.
	#
	# $* here expands to the matched %.
	# $@ does not exist in multi-rules, because there is no single target.
	# Using $@ in multi-rules is an error.
	# $(TARGET) expands to the program/library being built.
	# $(V) is an automake variable and is not expanded in the translation.
	# $(ALDOR_OUTPUTS) is also not expanded.
	#
	# The last variable, passed to --libs, queries the libraries linked
	# against the current target. The optional ": something" clause restricts
	# the libraries to those inheriting the "something" template. All built
	# libraries implicitly inherit the "library" template. Thus,
	# $(TARGET.link : library) can be used to filter out all external
	# libraries, thereby returning all internal project libraries the target
	# links against.
	#
	# XXX: Alternative selector syntax: $(TARGET.link[extends library])
	src/library/%.{$(ALDOR_OUTPUTS)}: src/library/%.as {
		$(top_srcdir)/extra/tools/alfront
			--frontend="$(THIS)"
			--basename='src/library/$*'
			--verbose="$(V)"
			--libs="$(TARGET.link : aldor-library)"
			--output="$(ALDOR_OUTPUTS)"
			--library='$(TARGET)'
			-- $[AFLAGS]
	}

	# This is another multi-rule that matches less specifically than the
	# rule above. It is therefore only matched, if the above rule does not
	# match.
	%.{$(ALDOR_OUTPUTS)}: %.as {
		$(top_srcdir)/extra/tools/alfront
			--frontend="$(THIS)"
			--basename="$*"
			--verbose="$(V)"
			--libs="$(TARGET.link : aldor-library)"
			--output="$(ALDOR_OUTPUTS)"
			-- $[AFLAGS]
	}

	# This is a simple pattern rule, which is disjoint with the above two
	# rules.
	%-main.c: %.as {
		$(top_srcdir)/extra/tools/alfront
			--frontend="$(THIS)"
			--basename="$*"
			--verbose="$(V)"
			--libs="$(TARGET.link : aldor-library)"
			--main
			-- $[AFLAGS]
	}

	# Implementation note:
	# Multi-rules are expanded to as many rules as there are targets. Only
	# the first target contains the code. The other rules are written to
	# depend on that target.
}
